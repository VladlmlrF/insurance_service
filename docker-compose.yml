version: '3.8'

networks:
  kafka_network:
    driver: bridge

services:
  db:
    image: postgres:15.6
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h $$DB_HOST -p 5432 -U $$POSTGRES_USER" ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 20s
    networks:
      - kafka_network

  migrator:
    build: .
    command: >
      sh -c "alembic upgrade head && echo 'Migrations applied successfully.'"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - kafka_network

  web:
    build: .
    restart: always
    volumes:
      - .:/code
    ports:
      - "8001:8001"
    depends_on:
      db:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
    env_file:
      - .env
    networks:
      - kafka_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - kafka_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka_network

  akhq:
    image: tchiotludo/akhq
    container_name: akhq
    volumes:
      - ./akhq.yml:/app/application.yml
    ports:
      - "8080:8080"
    networks:
      - kafka_network
    depends_on:
      - kafka

volumes:
  postgres_data:
